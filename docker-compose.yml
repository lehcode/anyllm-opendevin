services:
  devin:
    # image: ghcr.io/opendevin/opendevin:0.3.1
    container_name: devin_api
    hostname: devin-api
    build:
      dockerfile: docker/devin/app/sandbox.Dockerfile
      args:
        debug: ${DEBUG}
        app_root: ${APP_ROOT:?}
    # command: ["python3", "uvicorn.run('opendevin.server.listen:app', host='0.0.0.0', port='3000', reload=True, log_level=debug)"]
    environment:
      WORKSPACE_MOUNT_PATH: ${WORKSPACE_DIR:?}
      SANDBOX_USER_ID: 1000
      RUN_AS_DEVIN: true
      SANDBOX_TYPE: ${SANDBOX_TYPE:?}
      LLM_API_KEY: "sk-1234"
      LLM_MODEL: ${DEFAULT_CHAT_MODEL:?}
      LLM_EMBEDDING_MODEL: ${LLM_EMBEDDING_MODEL:-local}
      LLM_BASE_URL: "http://localhost:11434"
      SSH_HOSTNAME: devin-api
    # env_file:
    #   - .env
    #   - docker/devin/app/.env
    # working_dir: ${APP_ROOT:?}
    volumes:
      - ./agenthub:${APP_ROOT:?}/agenthub
      - opendevin_cache:${APP_ROOT:?}/cache
      - ./logs:${APP_ROOT:?}/logs
      - ./opendevin:${APP_ROOT:?}/opendevin
      - ./workspace:${WORKSPACE_DIR:?}
      # - conda_vol:${CONDA_ROOT:?}
      # - root_dir_vol:/root
      # - ./frontend/dist:${APP_ROOT:?}/frontend/dist
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${DEVIN_API_PORT}:${DEVIN_API_PORT}"
      - "${DEVIN_WS_PORT}:${DEVIN_WS_PORT}"
      - "${JUPYTER_PORT:?}:${JUPYTER_PORT:?}"
      # VSCode Python remote debugger
      - "0.0.0.0:5678:5678"
    networks:
      opendevin-net:
        ipv4_address: ${DEVIN_HOST:?}
    # entrypoint: /docker-entrypoint.sh
    tmpfs:
      - /run
      - /tmp
      - /var/run
    restart: no
    healthcheck:
      test: [ "CMD", "curl", "-L", "http://localhost:${DEVIN_WS_PORT}" ]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 2m
    depends_on:
      - redis
      - postgres
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: "nvidia"
    #           count: 1
    #           capabilities: [ "gpu" ]

  redis:
    image: redis/redis-stack:latest
    env_file:
      - .env
      - docker/redis/.env
    ports:
      # - "0.0.0.0:${REDIS_SERVER_PORT}:6379"
      - "${REDIS_INSIGHT_PORT}:8001"
    volumes:
      - redis_data:${REDIS_DATA:-/data}
    networks:
      - opendevin-net

  postgres:
    image: postgres:latest
    env_file:
      - .env
      - docker/postgres/.env
    volumes:
      - posgtres_data:${POSTGRES_DATA:-/var/lib/postgres}
    # ports:
    #   - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    tmpfs:
      - /var/run:size=1m
      - /tmp
    networks:
      - opendevin-net

  # UI service
  web_ui:
    container_name: devin_web
    image: lehcode/opendevin_ui-node${NODE_VERSION:?}-npm${NPM_VERSION}-pnpm-reactjs:dev
    build:
      dockerfile: docker/devin/web_ui/Dockerfile
      args:
        node_version: ${NODE_VERSION:?}
        npm_version: ${NPM_VERSION:?}
        node_env: ${NODE_ENV:?}
        debug: ${DEBUG:?}
        node_options: ${NODE_OPTIONS}
    env_file:
      - .env
      - docker/devin/web_ui/.env
    environment:
      BACKEND_HOST: ${DEVIN_HOST:?}:${DEVIN_API_PORT:?}
      FRONTEND_PORT: ${UI_HTTP_PORT:?}
    networks:
      - opendevin-net
    ports:
      - "${UI_HTTP_PORT:?}:${UI_HTTP_PORT:?}"
      - "${UI_HTTPS_PORT:?}:${UI_HTTPS_PORT:?}"
    tty: true
#    depends_on:
#      - devin

networks:
  opendevin-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  posgtres_data:
  redis_data:
  opendevin_cache:
